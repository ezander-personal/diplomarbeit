%!PS-Adobe-2.0 EPSF-2.0
%%Title: typicalsize.eps
%%Creator: gnuplot
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 120 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
LTb
1160 800 M
63 0 V
5857 0 R
-63 0 V
 stroke
1040 800 M
[ [(Helvetica) 200.0 0.0 true true (0)]
] -66.7 MRshow
1160 1204 M
63 0 V
5857 0 R
-63 0 V
 stroke
1040 1204 M
[ [(Helvetica) 200.0 0.0 true true (0.01)]
] -66.7 MRshow
1160 1608 M
63 0 V
5857 0 R
-63 0 V
 stroke
1040 1608 M
[ [(Helvetica) 200.0 0.0 true true (0.02)]
] -66.7 MRshow
1160 2012 M
63 0 V
5857 0 R
-63 0 V
 stroke
1040 2012 M
[ [(Helvetica) 200.0 0.0 true true (0.03)]
] -66.7 MRshow
1160 2416 M
63 0 V
5857 0 R
-63 0 V
 stroke
1040 2416 M
[ [(Helvetica) 200.0 0.0 true true (0.04)]
] -66.7 MRshow
1160 2820 M
63 0 V
5857 0 R
-63 0 V
 stroke
1040 2820 M
[ [(Helvetica) 200.0 0.0 true true (0.05)]
] -66.7 MRshow
1160 3224 M
63 0 V
5857 0 R
-63 0 V
 stroke
1040 3224 M
[ [(Helvetica) 200.0 0.0 true true (0.06)]
] -66.7 MRshow
1160 3628 M
63 0 V
5857 0 R
-63 0 V
 stroke
1040 3628 M
[ [(Helvetica) 200.0 0.0 true true (0.07)]
] -66.7 MRshow
1160 4032 M
63 0 V
5857 0 R
-63 0 V
 stroke
1040 4032 M
[ [(Helvetica) 200.0 0.0 true true (0.08)]
] -66.7 MRshow
1160 4436 M
63 0 V
5857 0 R
-63 0 V
 stroke
1040 4436 M
[ [(Helvetica) 200.0 0.0 true true (0.09)]
] -66.7 MRshow
1160 4840 M
63 0 V
5857 0 R
-63 0 V
 stroke
1040 4840 M
[ [(Helvetica) 200.0 0.0 true true (0.1)]
] -66.7 MRshow
1160 800 M
0 31 V
0 4009 R
0 -31 V
1364 800 M
0 31 V
0 4009 R
0 -31 V
1536 800 M
0 31 V
0 4009 R
0 -31 V
1685 800 M
0 31 V
0 4009 R
0 -31 V
1817 800 M
0 31 V
0 4009 R
0 -31 V
1934 800 M
0 63 V
0 3977 R
0 -63 V
 stroke
1934 600 M
[ [(Helvetica) 200.0 0.0 true true (10)]
] -66.7 MCshow
2709 800 M
0 31 V
0 4009 R
0 -31 V
3162 800 M
0 31 V
0 4009 R
0 -31 V
3483 800 M
0 31 V
0 4009 R
0 -31 V
3733 800 M
0 31 V
0 4009 R
0 -31 V
3936 800 M
0 31 V
0 4009 R
0 -31 V
4109 800 M
0 31 V
0 4009 R
0 -31 V
4258 800 M
0 31 V
0 4009 R
0 -31 V
4390 800 M
0 31 V
0 4009 R
0 -31 V
4507 800 M
0 63 V
0 3977 R
0 -63 V
 stroke
4507 600 M
[ [(Helvetica) 200.0 0.0 true true (100)]
] -66.7 MCshow
5282 800 M
0 31 V
0 4009 R
0 -31 V
5735 800 M
0 31 V
0 4009 R
0 -31 V
6056 800 M
0 31 V
0 4009 R
0 -31 V
6306 800 M
0 31 V
0 4009 R
0 -31 V
6509 800 M
0 31 V
0 4009 R
0 -31 V
6681 800 M
0 31 V
0 4009 R
0 -31 V
6831 800 M
0 31 V
0 4009 R
0 -31 V
6962 800 M
0 31 V
0 4009 R
0 -31 V
7080 800 M
0 63 V
0 3977 R
0 -63 V
 stroke
7080 600 M
[ [(Helvetica) 200.0 0.0 true true (1000)]
] -66.7 MCshow
LTb
1160 800 M
5920 0 V
0 4040 V
-5920 0 V
0 -4040 V
 stroke
200 2820 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 160.0 100.0 false true (^)]
[(Symbol) 200.0 0.0 true true (a)]
] -86.7 MCshow
grestore
4120 300 M
[ [(Helvetica) 200.0 0.0 true true (N)]
] -66.7 MCshow
1.000 UL
LT1
1364 800 M
570 4 V
657 0 V
643 12 V
625 24 V
648 -8 V
645 37 V
641 4 V
643 -25 V
644 -8 V
1.000 UL
LT0
1364 2788 M
570 -16 V
657 157 V
643 -145 V
625 165 V
648 -101 V
645 29 V
641 -174 V
643 271 V
644 -166 V
1.000 UP
1.000 UL
LT0
1364 800 M
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
539 -12 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
626 -16 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
612 -12 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
594 0 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
617 -33 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
614 13 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
610 -20 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
612 -49 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
613 -33 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
1364 800 Pls
1934 804 Pls
2591 804 Pls
3234 816 Pls
3859 840 Pls
4507 832 Pls
5152 869 Pls
5793 873 Pls
6436 848 Pls
7080 840 Pls
1.000 UP
1.000 UL
LT0
1364 2699 M
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
539 -194 R
0 177 V
-31 -177 R
62 0 V
-62 177 R
62 0 V
626 -20 R
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
612 -323 R
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
594 -13 R
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
617 -279 R
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
614 -149 R
0 177 V
-31 -177 R
62 0 V
-62 177 R
62 0 V
610 -351 R
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
612 93 R
0 177 V
-31 -177 R
62 0 V
-62 177 R
62 0 V
613 -343 R
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
1364 2788 Pls
1934 2772 Pls
2591 2929 Pls
3234 2784 Pls
3859 2949 Pls
4507 2848 Pls
5152 2877 Pls
5793 2703 Pls
6436 2974 Pls
7080 2808 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol, Helvetica
